# Copyright 2024 The Dapr Authors
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#     http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apps/v1
kind: Deployment
metadata:
  name: demoactor-client-app
  namespace: ns2
  labels:
    app: demoactor-client
spec:
  replicas: 1
  selector:
    matchLabels:
      app: demoactor-client
  template:
    metadata:
      labels:
        app: demoactor-client
      annotations:
        dapr.io/enabled: "true"
        dapr.io/app-id: "demoactor-client-ns2"
        dapr.io/app-port: "3000"
    spec:
      containers:
      - name: demoactor-client
        image: demoactor-client:latest
        imagePullPolicy: Never
        ports:
          - containerPort: 3000
        env:
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
---
apiVersion: v1
kind: Service
metadata:
  name: demoactor-client-app-service
  namespace: ns2
spec:
  selector:
    app: demoactor-client
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: demoactor-server-app
  namespace: ns2
  labels:
    app: demoactor-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: demoactor-server
  template:
    metadata:
      labels:
        app: demoactor-server
      annotations:
        dapr.io/enabled: "true"
        dapr.io/app-id: "demoactor-server-ns2"
        dapr.io/app-port: "5000"
    spec:
      containers:
      - name: demoactor-server
        image: demoactor-server:latest
        imagePullPolicy: Never
        ports:
          - containerPort: 5000
        env:
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
---
apiVersion: v1
kind: Service
metadata:
  name: demoactor-server-app-service
  namespace: ns2
spec:
  selector:
    app: demoactor-server
  ports:
    - protocol: TCP
      port: 5000
      targetPort: 5000
---
apiVersion: dapr.io/v1alpha1
kind: Component
metadata:
  name: statestore2
  namespace: ns2
spec:
  type: state.redis
  version: v1
  metadata:
  - name: redisHost
    value: redis-master.default.svc.cluster.local:6379
  - name: redisPassword
    secretKeyRef:
      name: redis-secret
      key: redis-password
  - name: actorStateStore
    value: "true"
  - name: redisDB
    value: "2"